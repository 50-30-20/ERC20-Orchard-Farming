{
  "contractName": "Vault",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositErc20",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositErc20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/vault.sol\":\"Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/src/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7ab253bdecdfb937654504387bd184dcdd3e73bf6f6ecfd7648979ce0a669926\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://833d2a2c021e62b2391e436854ecfd4b6dc5d75ced3d3b932072a58d52050f46\",\"dweb:/ipfs/Qmf9MW3pwYcXLTs5Z8Kwhuxt2yh8A8FkwPnZ5PGrEyuJhU\"]},\"project:/src/contracts/link/LinkTokenInterface.sol\":{\"keccak256\":\"0x6afbff5516a4d765a698cfd3b49ab8f6c1368ea034bc9130fce0d0e54f4a0a01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65c865dcd409dbf82d60904e8d875a33496b4bbf0835a223cad7e0837bbf4bed\",\"dweb:/ipfs/QmXcLuSQFbbTqwLs7TobL7jQLFeqgc2YLbammu5fY1caFh\"]},\"project:/src/contracts/link/VRFConsumerBase.sol\":{\"keccak256\":\"0xc9e86989ae703d669020f3d3c7662dfd8761d70da42ea13d18f650e24331ff3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a18377a3562d490db76539a83b7acfa0990a66a6b3fde2f867db891d260cf226\",\"dweb:/ipfs/QmUUFEp86B5ALR2jfkC6YFjq4q2xcVoRGbPVDmqDXbAS29\"]},\"project:/src/contracts/link/VRFRequestIDBase.sol\":{\"keccak256\":\"0x7c8dad07e6c6c9269d97fd1191ccf9c0f0068683f1f88003e688eef9373de0d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d88c83a359c70f6b2e2e05d8f7611cce4a3d316a65e5175e14bcf9a6ced98af\",\"dweb:/ipfs/QmeH3BEuVvaaQsz7sN5myEnFLoabTG4j85vS9Z6rfJkads\"]},\"project:/src/contracts/utils/SafeMath.sol\":{\"keccak256\":\"0xbee8e9efe06d150f11e2dd9fe29263aea2a8556ad8d3c05b9e724027d7eeb5b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547592f78cc48bf6539a14210f5a0cb2c667160ab92c38da8400ea0e39459c6f\",\"dweb:/ipfs/QmY4bwvkQdJ9Co9NmZnBFWWPJzQHJZt5qGYVdbk4pMbRNM\"]},\"project:/src/contracts/vault.sol\":{\"keccak256\":\"0x9ef5c4ace63d65891267a07199721773006fbaedfa613823df2409151372323d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5330701ac45d45f71bc9b944055c125c017235efbba8c32c6e0b8047a056e43\",\"dweb:/ipfs/QmXHE2pwbDQk4mqpSSdkHuhSy6durQqLTgWi9ntjF7wn7w\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000808190555060006001819055506104c48061002f6000396000f3fe60806040526004361061001e5760003560e01c80636548b40d14610023575b600080fd5b61003d600480360381019061003891906102b0565b61003f565b005b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b815260040161007a929190610341565b602060405180830381600087803b15801561009457600080fd5b505af11580156100a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cc9190610287565b508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161010a9392919061030a565b602060405180830381600087803b15801561012457600080fd5b505af1158015610138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015c9190610287565b508060015461016b919061036a565b6001819055506001600054610180919061036a565b60008190555060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200182815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505050565b60008151905061025781610449565b92915050565b60008135905061026c81610460565b92915050565b60008135905061028181610477565b92915050565b60006020828403121561029957600080fd5b60006102a784828501610248565b91505092915050565b600080604083850312156102c357600080fd5b60006102d18582860161025d565b92505060206102e285828601610272565b9150509250929050565b6102f5816103c0565b82525050565b61030481610410565b82525050565b600060608201905061031f60008301866102ec565b61032c60208301856102ec565b61033960408301846102fb565b949350505050565b600060408201905061035660008301856102ec565b61036360208301846102fb565b9392505050565b600061037582610410565b915061038083610410565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156103b5576103b461041a565b5b828201905092915050565b60006103cb826103f0565b9050919050565b60008115159050919050565b60006103e9826103c0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610452816103d2565b811461045d57600080fd5b50565b610469816103de565b811461047457600080fd5b50565b61048081610410565b811461048b57600080fd5b5056fea26469706673582212200d7a393a1d7fa601acc1a24fb30d69cec278f3d588a2170c0aa15ebdd14ef28c64736f6c63430008010033",
  "deployedBytecode": "0x60806040526004361061001e5760003560e01c80636548b40d14610023575b600080fd5b61003d600480360381019061003891906102b0565b61003f565b005b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b815260040161007a929190610341565b602060405180830381600087803b15801561009457600080fd5b505af11580156100a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cc9190610287565b508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161010a9392919061030a565b602060405180830381600087803b15801561012457600080fd5b505af1158015610138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015c9190610287565b508060015461016b919061036a565b6001819055506001600054610180919061036a565b60008190555060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200182815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050505050565b60008151905061025781610449565b92915050565b60008135905061026c81610460565b92915050565b60008135905061028181610477565b92915050565b60006020828403121561029957600080fd5b60006102a784828501610248565b91505092915050565b600080604083850312156102c357600080fd5b60006102d18582860161025d565b92505060206102e285828601610272565b9150509250929050565b6102f5816103c0565b82525050565b61030481610410565b82525050565b600060608201905061031f60008301866102ec565b61032c60208301856102ec565b61033960408301846102fb565b949350505050565b600060408201905061035660008301856102ec565b61036360208301846102fb565b9392505050565b600061037582610410565b915061038083610410565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156103b5576103b461041a565b5b828201905092915050565b60006103cb826103f0565b9050919050565b60008115159050919050565b60006103e9826103c0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b610452816103d2565b811461045d57600080fd5b50565b610469816103de565b811461047457600080fd5b50565b61048081610410565b811461048b57600080fd5b5056fea26469706673582212200d7a393a1d7fa601acc1a24fb30d69cec278f3d588a2170c0aa15ebdd14ef28c64736f6c63430008010033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3663:29",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:77:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "92:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:13:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "77:5:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "108:23:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "108:30:29"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "45:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "53:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:29",
                "type": ""
              }
            ],
            "src": "7:137:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "217:102:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "227:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "249:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "236:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "236:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "227:5:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "307:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$2729",
                      "nodeType": "YulIdentifier",
                      "src": "265:41:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "265:48:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "265:48:29"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$2729",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "195:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "203:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "211:5:29",
                "type": ""
              }
            ],
            "src": "150:169:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "377:87:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "387:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "409:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "396:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "396:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "387:5:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "452:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "425:26:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "425:33:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "425:33:29"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "355:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "363:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "371:5:29",
                "type": ""
              }
            ],
            "src": "325:139:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "544:204:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "590:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "599:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "602:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "592:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "592:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "592:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "565:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "574:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "561:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "561:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "586:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "557:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "554:2:29"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "616:125:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "631:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "645:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "635:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "660:71:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "703:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "714:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "699:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "699:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "723:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "670:28:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "670:61:29"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "660:6:29"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "514:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "525:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "537:6:29",
                "type": ""
              }
            ],
            "src": "470:278:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "852:339:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "898:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "907:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "910:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "900:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "900:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "900:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "873:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "882:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "869:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "869:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "894:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "865:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "865:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "862:2:29"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "924:132:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "939:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "953:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "943:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "968:78:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1018:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1029:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1014:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1014:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1038:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$2729",
                          "nodeType": "YulIdentifier",
                          "src": "978:35:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "978:68:29"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "968:6:29"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1066:118:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1081:16:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1095:2:29",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1085:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1111:63:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1146:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1157:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1142:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1142:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1166:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1121:20:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1121:53:29"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1111:6:29"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$2729t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "814:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "825:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "837:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "845:6:29",
                "type": ""
              }
            ],
            "src": "754:437:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1262:53:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1279:3:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1302:5:29"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1284:17:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1284:24:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1272:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:37:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1272:37:29"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1250:5:29",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1257:3:29",
                "type": ""
              }
            ],
            "src": "1197:118:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1386:53:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1403:3:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1426:5:29"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1408:17:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1408:24:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1396:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:37:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1396:37:29"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1374:5:29",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1381:3:29",
                "type": ""
              }
            ],
            "src": "1321:118:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1599:288:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1609:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1621:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1632:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1617:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1617:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1609:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1689:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1702:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1713:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1698:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:17:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1645:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:71:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1645:71:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1770:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1783:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1794:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1779:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1779:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1726:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1726:72:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1726:72:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1852:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1865:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1876:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1861:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1861:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1808:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1808:72:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1808:72:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1555:9:29",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1567:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1575:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1583:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1594:4:29",
                "type": ""
              }
            ],
            "src": "1445:442:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2019:206:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2029:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2041:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2052:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2037:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2037:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2029:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2109:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2122:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2133:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2118:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:17:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2065:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2065:71:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2065:71:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2190:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2203:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2214:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2199:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2199:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2146:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:72:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2146:72:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1983:9:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1995:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2003:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2014:4:29",
                "type": ""
              }
            ],
            "src": "1893:332:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2275:261:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2285:25:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2308:1:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2290:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2290:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2285:1:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2319:25:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2342:1:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2324:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2324:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2319:1:29"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2482:22:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2484:16:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2484:18:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2484:18:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2403:1:29"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2410:66:29",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2478:1:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2406:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2406:74:29"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2400:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2400:81:29"
                  },
                  "nodeType": "YulIf",
                  "src": "2397:2:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2514:16:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2525:1:29"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2528:1:29"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2521:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2521:9:29"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2514:3:29"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2262:1:29",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2265:1:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2271:3:29",
                "type": ""
              }
            ],
            "src": "2231:305:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2587:51:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2597:35:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2626:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2608:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2608:24:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2597:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2569:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2579:7:29",
                "type": ""
              }
            ],
            "src": "2542:96:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2686:48:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2696:32:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2721:5:29"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2714:6:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2714:13:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2707:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2707:21:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2696:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2668:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2678:7:29",
                "type": ""
              }
            ],
            "src": "2644:90:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2800:51:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2810:35:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2839:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2821:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2821:24:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2810:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$2729",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2782:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2792:7:29",
                "type": ""
              }
            ],
            "src": "2740:111:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2902:81:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2912:65:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2927:5:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2934:42:29",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2923:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2923:54:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2912:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2884:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2894:7:29",
                "type": ""
              }
            ],
            "src": "2857:126:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3034:32:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3044:16:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3055:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3044:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3016:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3026:7:29",
                "type": ""
              }
            ],
            "src": "2989:77:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3100:152:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3117:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3120:77:29",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3110:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3110:88:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3110:88:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3214:1:29",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3217:4:29",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3207:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3207:15:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3207:15:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3238:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3241:4:29",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3231:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3231:15:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3231:15:29"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3072:180:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3298:76:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3352:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3361:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3364:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3354:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3354:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3354:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3321:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3343:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "3328:14:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3328:21:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3318:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3318:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3311:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3311:40:29"
                  },
                  "nodeType": "YulIf",
                  "src": "3308:2:29"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3291:5:29",
                "type": ""
              }
            ],
            "src": "3258:116:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3438:94:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3510:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3519:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3522:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3512:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3512:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3512:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3461:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3501:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$2729",
                              "nodeType": "YulIdentifier",
                              "src": "3468:32:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3468:39:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3458:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3458:50:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3451:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3451:58:29"
                  },
                  "nodeType": "YulIf",
                  "src": "3448:2:29"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$2729",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3431:5:29",
                "type": ""
              }
            ],
            "src": "3380:152:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3581:79:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3638:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3647:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3650:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3640:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3640:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3640:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3604:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3629:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3611:17:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3611:24:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3601:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3601:35:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3594:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3594:43:29"
                  },
                  "nodeType": "YulIf",
                  "src": "3591:2:29"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3574:5:29",
                "type": ""
              }
            ],
            "src": "3538:122:29"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$2729(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$2729(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$2729t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$2729(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_IERC20_$2729(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$2729(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$2729(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "308:803:28:-:0;;;547:82;;;;;;;;;;587:1;571:13;:17;;;;621:1;598:20;:24;;;;308:803;;;;;;",
  "deployedSourceMap": "308:803:28:-:0;;;;;;;;;;;;;;;;;;;;;635:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;719:12;:20;;;748:4;755:6;719:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;772:12;:25;;;798:10;818:4;825:6;772:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;889:6;866:20;;:29;;;;:::i;:::-;843:20;:52;;;;937:1;921:13;;:17;;;;:::i;:::-;905:13;:33;;;;972:63;;;;;;;;995:10;972:63;;;;;;1019:6;972:63;;;948:9;:21;958:10;948:21;;;;;;;;;;;;;;;:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:407;;:::o;7:137:29:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:169::-;;249:6;236:20;227:29;;265:48;307:5;265:48;:::i;:::-;217:102;;;;:::o;325:139::-;;409:6;396:20;387:29;;425:33;452:5;425:33;:::i;:::-;377:87;;;;:::o;470:278::-;;586:2;574:9;565:7;561:23;557:32;554:2;;;602:1;599;592:12;554:2;645:1;670:61;723:7;714:6;703:9;699:22;670:61;:::i;:::-;660:71;;616:125;544:204;;;;:::o;754:437::-;;;894:2;882:9;873:7;869:23;865:32;862:2;;;910:1;907;900:12;862:2;953:1;978:68;1038:7;1029:6;1018:9;1014:22;978:68;:::i;:::-;968:78;;924:132;1095:2;1121:53;1166:7;1157:6;1146:9;1142:22;1121:53;:::i;:::-;1111:63;;1066:118;852:339;;;;;:::o;1197:118::-;1284:24;1302:5;1284:24;:::i;:::-;1279:3;1272:37;1262:53;;:::o;1321:118::-;1408:24;1426:5;1408:24;:::i;:::-;1403:3;1396:37;1386:53;;:::o;1445:442::-;;1632:2;1621:9;1617:18;1609:26;;1645:71;1713:1;1702:9;1698:17;1689:6;1645:71;:::i;:::-;1726:72;1794:2;1783:9;1779:18;1770:6;1726:72;:::i;:::-;1808;1876:2;1865:9;1861:18;1852:6;1808:72;:::i;:::-;1599:288;;;;;;:::o;1893:332::-;;2052:2;2041:9;2037:18;2029:26;;2065:71;2133:1;2122:9;2118:17;2109:6;2065:71;:::i;:::-;2146:72;2214:2;2203:9;2199:18;2190:6;2146:72;:::i;:::-;2019:206;;;;;:::o;2231:305::-;;2290:20;2308:1;2290:20;:::i;:::-;2285:25;;2324:20;2342:1;2324:20;:::i;:::-;2319:25;;2478:1;2410:66;2406:74;2403:1;2400:81;2397:2;;;2484:18;;:::i;:::-;2397:2;2528:1;2525;2521:9;2514:16;;2275:261;;;;:::o;2542:96::-;;2608:24;2626:5;2608:24;:::i;:::-;2597:35;;2587:51;;;:::o;2644:90::-;;2721:5;2714:13;2707:21;2696:32;;2686:48;;;:::o;2740:111::-;;2821:24;2839:5;2821:24;:::i;:::-;2810:35;;2800:51;;;:::o;2857:126::-;;2934:42;2927:5;2923:54;2912:65;;2902:81;;;:::o;2989:77::-;;3055:5;3044:16;;3034:32;;;:::o;3072:180::-;3120:77;3117:1;3110:88;3217:4;3214:1;3207:15;3241:4;3238:1;3231:15;3258:116;3328:21;3343:5;3328:21;:::i;:::-;3321:5;3318:32;3308:2;;3364:1;3361;3354:12;3308:2;3298:76;:::o;3380:152::-;3468:39;3501:5;3468:39;:::i;:::-;3461:5;3458:50;3448:2;;3522:1;3519;3512:12;3448:2;3438:94;:::o;3538:122::-;3611:24;3629:5;3611:24;:::i;:::-;3604:5;3601:35;3591:2;;3650:1;3647;3640:12;3591:2;3581:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"./link/VRFConsumerBase.sol\";\nimport \"./interfaces/IERC20.sol\";\nimport {SafeMath} from \"./utils/SafeMath.sol\";\n\ncontract Vault {\n    using SafeMath for uint256;\n    uint256 donationCount;\n    uint256 donationsAccumulated;\n\n    struct donotaion {\n        address sender;\n        uint256 amount;\n    }\n\n    mapping(address => donotaion) donations;\n\n    constructor() {\n        donationCount = 0;\n        donationsAccumulated = 0;\n    }\n\n    function depositErc20(IERC20 tokenAddress, uint256 amount) public payable {\n        tokenAddress.approve(address(this), amount);\n        tokenAddress.transferFrom(msg.sender, address(this), amount);\n\n        donationsAccumulated = donationsAccumulated + amount;\n        donationCount = donationCount + 1;\n        donations[msg.sender] = donotaion(\n            msg.sender,\n            amount\n        );\n    }\n\n    // function distrubuteRandomFund() public payable {\n\n    // }\n}",
  "sourcePath": "/Users/sagarbehara/Work/sides/gitcoin/petgram/src/contracts/vault.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/vault.sol",
    "exportedSymbols": {
      "Address": [
        2136
      ],
      "Context": [
        2158
      ],
      "ERC165": [
        2408
      ],
      "ERC721": [
        1555
      ],
      "ERC721URIStorage": [
        1814
      ],
      "IERC165": [
        2420
      ],
      "IERC20": [
        2729
      ],
      "IERC721": [
        1671
      ],
      "IERC721Metadata": [
        1841
      ],
      "IERC721Receiver": [
        1689
      ],
      "LinkTokenInterface": [
        2968
      ],
      "SafeMath": [
        3908
      ],
      "Strings": [
        2384
      ],
      "VRFConsumerBase": [
        3087
      ],
      "VRFRequestIDBase": [
        3137
      ],
      "Vault": [
        4000
      ]
    },
    "id": 4001,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3910,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 3911,
        "nodeType": "ImportDirective",
        "scope": 4001,
        "sourceUnit": 1815,
        "src": "57:78:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 3912,
        "nodeType": "ImportDirective",
        "scope": 4001,
        "sourceUnit": 2385,
        "src": "136:51:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/link/VRFConsumerBase.sol",
        "file": "./link/VRFConsumerBase.sol",
        "id": 3913,
        "nodeType": "ImportDirective",
        "scope": 4001,
        "sourceUnit": 3088,
        "src": "189:36:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3914,
        "nodeType": "ImportDirective",
        "scope": 4001,
        "sourceUnit": 2730,
        "src": "226:33:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/utils/SafeMath.sol",
        "file": "./utils/SafeMath.sol",
        "id": 3916,
        "nodeType": "ImportDirective",
        "scope": 4001,
        "sourceUnit": 3909,
        "src": "260:46:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3915,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "268:8:28",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4000,
        "linearizedBaseContracts": [
          4000
        ],
        "name": "Vault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3919,
            "libraryName": {
              "id": 3917,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3908,
              "src": "335:8:28"
            },
            "nodeType": "UsingForDirective",
            "src": "329:27:28",
            "typeName": {
              "id": 3918,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "348:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3921,
            "mutability": "mutable",
            "name": "donationCount",
            "nodeType": "VariableDeclaration",
            "scope": 4000,
            "src": "361:21:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3920,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "361:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3923,
            "mutability": "mutable",
            "name": "donationsAccumulated",
            "nodeType": "VariableDeclaration",
            "scope": 4000,
            "src": "388:28:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3922,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "388:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Vault.donotaion",
            "id": 3928,
            "members": [
              {
                "constant": false,
                "id": 3925,
                "mutability": "mutable",
                "name": "sender",
                "nodeType": "VariableDeclaration",
                "scope": 3928,
                "src": "450:14:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3924,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "450:7:28",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3927,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 3928,
                "src": "474:14:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3926,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "donotaion",
            "nodeType": "StructDefinition",
            "scope": 4000,
            "src": "423:72:28",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3933,
            "mutability": "mutable",
            "name": "donations",
            "nodeType": "VariableDeclaration",
            "scope": 4000,
            "src": "501:39:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_donotaion_$3928_storage_$",
              "typeString": "mapping(address => struct Vault.donotaion)"
            },
            "typeName": {
              "id": 3932,
              "keyType": {
                "id": 3929,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "509:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "501:29:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_donotaion_$3928_storage_$",
                "typeString": "mapping(address => struct Vault.donotaion)"
              },
              "valueType": {
                "id": 3931,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3930,
                  "name": "donotaion",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3928,
                  "src": "520:9:28"
                },
                "referencedDeclaration": 3928,
                "src": "520:9:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_donotaion_$3928_storage_ptr",
                  "typeString": "struct Vault.donotaion"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3944,
              "nodeType": "Block",
              "src": "561:68:28",
              "statements": [
                {
                  "expression": {
                    "id": 3938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3936,
                      "name": "donationCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3921,
                      "src": "571:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "587:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "571:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3939,
                  "nodeType": "ExpressionStatement",
                  "src": "571:17:28"
                },
                {
                  "expression": {
                    "id": 3942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3940,
                      "name": "donationsAccumulated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3923,
                      "src": "598:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "621:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "598:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3943,
                  "nodeType": "ExpressionStatement",
                  "src": "598:24:28"
                }
              ]
            },
            "id": 3945,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:2:28"
            },
            "returnParameters": {
              "id": 3935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:0:28"
            },
            "scope": 4000,
            "src": "547:82:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3998,
              "nodeType": "Block",
              "src": "709:333:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3958,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "748:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$4000",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$4000",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 3957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "740:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3956,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "740:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "740:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3960,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "755:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3953,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3948,
                        "src": "719:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2729",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2698,
                      "src": "719:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3962,
                  "nodeType": "ExpressionStatement",
                  "src": "719:43:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3966,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "798:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "798:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3970,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "818:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$4000",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$4000",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 3969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "810:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3968,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "810:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "810:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3972,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "825:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3963,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3948,
                        "src": "772:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2729",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2710,
                      "src": "772:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "772:60:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3974,
                  "nodeType": "ExpressionStatement",
                  "src": "772:60:28"
                },
                {
                  "expression": {
                    "id": 3979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3975,
                      "name": "donationsAccumulated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3923,
                      "src": "843:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3976,
                        "name": "donationsAccumulated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "866:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 3977,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "889:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "866:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "843:52:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3980,
                  "nodeType": "ExpressionStatement",
                  "src": "843:52:28"
                },
                {
                  "expression": {
                    "id": 3985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3981,
                      "name": "donationCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3921,
                      "src": "905:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3982,
                        "name": "donationCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3921,
                        "src": "921:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 3983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "937:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "921:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "905:33:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3986,
                  "nodeType": "ExpressionStatement",
                  "src": "905:33:28"
                },
                {
                  "expression": {
                    "id": 3996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3987,
                        "name": "donations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3933,
                        "src": "948:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_donotaion_$3928_storage_$",
                          "typeString": "mapping(address => struct Vault.donotaion storage ref)"
                        }
                      },
                      "id": 3990,
                      "indexExpression": {
                        "expression": {
                          "id": 3988,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "958:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "958:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "948:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_donotaion_$3928_storage",
                        "typeString": "struct Vault.donotaion storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3992,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "995:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "995:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3994,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3950,
                          "src": "1019:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3991,
                        "name": "donotaion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3928,
                        "src": "972:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_donotaion_$3928_storage_ptr_$",
                          "typeString": "type(struct Vault.donotaion storage pointer)"
                        }
                      },
                      "id": 3995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "972:63:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_donotaion_$3928_memory_ptr",
                        "typeString": "struct Vault.donotaion memory"
                      }
                    },
                    "src": "948:87:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_donotaion_$3928_storage",
                      "typeString": "struct Vault.donotaion storage ref"
                    }
                  },
                  "id": 3997,
                  "nodeType": "ExpressionStatement",
                  "src": "948:87:28"
                }
              ]
            },
            "functionSelector": "6548b40d",
            "id": 3999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositErc20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3948,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3999,
                  "src": "657:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2729",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3947,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3946,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2729,
                      "src": "657:6:28"
                    },
                    "referencedDeclaration": 2729,
                    "src": "657:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2729",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3950,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3999,
                  "src": "678:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "656:37:28"
            },
            "returnParameters": {
              "id": 3952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "709:0:28"
            },
            "scope": 4000,
            "src": "635:407:28",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4001,
        "src": "308:803:28"
      }
    ],
    "src": "32:1079:28"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/vault.sol",
    "exportedSymbols": {
      "Address": [
        2136
      ],
      "Context": [
        2158
      ],
      "ERC165": [
        2408
      ],
      "ERC721": [
        1555
      ],
      "ERC721URIStorage": [
        1814
      ],
      "IERC165": [
        2420
      ],
      "IERC20": [
        2729
      ],
      "IERC721": [
        1671
      ],
      "IERC721Metadata": [
        1841
      ],
      "IERC721Receiver": [
        1689
      ],
      "LinkTokenInterface": [
        2968
      ],
      "SafeMath": [
        3908
      ],
      "Strings": [
        2384
      ],
      "VRFConsumerBase": [
        3087
      ],
      "VRFRequestIDBase": [
        3137
      ],
      "Vault": [
        4000
      ]
    },
    "id": 4001,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3910,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:28"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 3911,
        "nodeType": "ImportDirective",
        "scope": 4001,
        "sourceUnit": 1815,
        "src": "57:78:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 3912,
        "nodeType": "ImportDirective",
        "scope": 4001,
        "sourceUnit": 2385,
        "src": "136:51:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/link/VRFConsumerBase.sol",
        "file": "./link/VRFConsumerBase.sol",
        "id": 3913,
        "nodeType": "ImportDirective",
        "scope": 4001,
        "sourceUnit": 3088,
        "src": "189:36:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/interfaces/IERC20.sol",
        "file": "./interfaces/IERC20.sol",
        "id": 3914,
        "nodeType": "ImportDirective",
        "scope": 4001,
        "sourceUnit": 2730,
        "src": "226:33:28",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/utils/SafeMath.sol",
        "file": "./utils/SafeMath.sol",
        "id": 3916,
        "nodeType": "ImportDirective",
        "scope": 4001,
        "sourceUnit": 3909,
        "src": "260:46:28",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3915,
              "name": "SafeMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "268:8:28",
              "typeDescriptions": {}
            }
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4000,
        "linearizedBaseContracts": [
          4000
        ],
        "name": "Vault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3919,
            "libraryName": {
              "id": 3917,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3908,
              "src": "335:8:28"
            },
            "nodeType": "UsingForDirective",
            "src": "329:27:28",
            "typeName": {
              "id": 3918,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "348:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3921,
            "mutability": "mutable",
            "name": "donationCount",
            "nodeType": "VariableDeclaration",
            "scope": 4000,
            "src": "361:21:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3920,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "361:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3923,
            "mutability": "mutable",
            "name": "donationsAccumulated",
            "nodeType": "VariableDeclaration",
            "scope": 4000,
            "src": "388:28:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3922,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "388:7:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Vault.donotaion",
            "id": 3928,
            "members": [
              {
                "constant": false,
                "id": 3925,
                "mutability": "mutable",
                "name": "sender",
                "nodeType": "VariableDeclaration",
                "scope": 3928,
                "src": "450:14:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3924,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "450:7:28",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3927,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 3928,
                "src": "474:14:28",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3926,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "474:7:28",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "donotaion",
            "nodeType": "StructDefinition",
            "scope": 4000,
            "src": "423:72:28",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3933,
            "mutability": "mutable",
            "name": "donations",
            "nodeType": "VariableDeclaration",
            "scope": 4000,
            "src": "501:39:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_donotaion_$3928_storage_$",
              "typeString": "mapping(address => struct Vault.donotaion)"
            },
            "typeName": {
              "id": 3932,
              "keyType": {
                "id": 3929,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "509:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "501:29:28",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_donotaion_$3928_storage_$",
                "typeString": "mapping(address => struct Vault.donotaion)"
              },
              "valueType": {
                "id": 3931,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3930,
                  "name": "donotaion",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3928,
                  "src": "520:9:28"
                },
                "referencedDeclaration": 3928,
                "src": "520:9:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_donotaion_$3928_storage_ptr",
                  "typeString": "struct Vault.donotaion"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3944,
              "nodeType": "Block",
              "src": "561:68:28",
              "statements": [
                {
                  "expression": {
                    "id": 3938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3936,
                      "name": "donationCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3921,
                      "src": "571:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "587:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "571:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3939,
                  "nodeType": "ExpressionStatement",
                  "src": "571:17:28"
                },
                {
                  "expression": {
                    "id": 3942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3940,
                      "name": "donationsAccumulated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3923,
                      "src": "598:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 3941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "621:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "598:24:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3943,
                  "nodeType": "ExpressionStatement",
                  "src": "598:24:28"
                }
              ]
            },
            "id": 3945,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:2:28"
            },
            "returnParameters": {
              "id": 3935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:0:28"
            },
            "scope": 4000,
            "src": "547:82:28",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3998,
              "nodeType": "Block",
              "src": "709:333:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3958,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "748:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$4000",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$4000",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 3957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "740:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3956,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "740:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "740:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3960,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "755:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3953,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3948,
                        "src": "719:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2729",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2698,
                      "src": "719:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3962,
                  "nodeType": "ExpressionStatement",
                  "src": "719:43:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3966,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "798:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "798:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3970,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "818:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vault_$4000",
                              "typeString": "contract Vault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vault_$4000",
                              "typeString": "contract Vault"
                            }
                          ],
                          "id": 3969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "810:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3968,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "810:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "810:13:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3972,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "825:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3963,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3948,
                        "src": "772:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2729",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2710,
                      "src": "772:25:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "772:60:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3974,
                  "nodeType": "ExpressionStatement",
                  "src": "772:60:28"
                },
                {
                  "expression": {
                    "id": 3979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3975,
                      "name": "donationsAccumulated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3923,
                      "src": "843:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3976,
                        "name": "donationsAccumulated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3923,
                        "src": "866:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 3977,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3950,
                        "src": "889:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "866:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "843:52:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3980,
                  "nodeType": "ExpressionStatement",
                  "src": "843:52:28"
                },
                {
                  "expression": {
                    "id": 3985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3981,
                      "name": "donationCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3921,
                      "src": "905:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3982,
                        "name": "donationCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3921,
                        "src": "921:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 3983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "937:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "921:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "905:33:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3986,
                  "nodeType": "ExpressionStatement",
                  "src": "905:33:28"
                },
                {
                  "expression": {
                    "id": 3996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3987,
                        "name": "donations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3933,
                        "src": "948:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_donotaion_$3928_storage_$",
                          "typeString": "mapping(address => struct Vault.donotaion storage ref)"
                        }
                      },
                      "id": 3990,
                      "indexExpression": {
                        "expression": {
                          "id": 3988,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "958:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "958:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "948:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_donotaion_$3928_storage",
                        "typeString": "struct Vault.donotaion storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3992,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "995:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "995:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3994,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3950,
                          "src": "1019:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3991,
                        "name": "donotaion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3928,
                        "src": "972:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_donotaion_$3928_storage_ptr_$",
                          "typeString": "type(struct Vault.donotaion storage pointer)"
                        }
                      },
                      "id": 3995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "972:63:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_donotaion_$3928_memory_ptr",
                        "typeString": "struct Vault.donotaion memory"
                      }
                    },
                    "src": "948:87:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_donotaion_$3928_storage",
                      "typeString": "struct Vault.donotaion storage ref"
                    }
                  },
                  "id": 3997,
                  "nodeType": "ExpressionStatement",
                  "src": "948:87:28"
                }
              ]
            },
            "functionSelector": "6548b40d",
            "id": 3999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositErc20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3948,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3999,
                  "src": "657:19:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2729",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3947,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3946,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2729,
                      "src": "657:6:28"
                    },
                    "referencedDeclaration": 2729,
                    "src": "657:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2729",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3950,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3999,
                  "src": "678:14:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "656:37:28"
            },
            "returnParameters": {
              "id": 3952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "709:0:28"
            },
            "scope": 4000,
            "src": "635:407:28",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4001,
        "src": "308:803:28"
      }
    ],
    "src": "32:1079:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x9B318B149756710523f039ceA3B9Fa8Fcd40689c",
      "transactionHash": "0x9faf0a77860361b186ba29720c3129f198df1fdf75a7b02c3b9ba7e271b903f6"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-07-17T21:39:18.563Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}